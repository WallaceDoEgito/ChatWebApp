services:
  redis:
    image: redis:8-alpine
    ports:
      - "6379:6379"
      - "6380:6380"
      
  
  postgres:
    image: postgres:17.5-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "ExamplePassword"
    ports:
      - "5432:5432"
      - "5433:5433"
    volumes:
      - postgres_data:/var/lib/postgresql/data


  rabbitmq:
    image: rabbitmq:4.1.2-management
    ports:
      - "5672:5672"
      - "15672:15672"
      - "5671:5671"
  
  backend-one: &backend
    build:
      context: ./Backend/ChatApp
    ports:
      - "9000:8080"
    depends_on:
      - redis
      - postgres
      - rabbitmq
    environment:
      - DbConnectionString=Server=postgres;Port=5432;Database=postgres;User Id=postgres;Password=ExamplePassword;
      - RedisConnectionString=redis
      - RabbitMqHost=rabbitmq
      - JWTConfig__Issuer=AppChatBackend
      - JWTConfig__Audience=AppChatFrontend
      - JWTConfig__SecretKey=ExamplePasswordSha256X84V&&@WF8q4^7fsSWrLCMBF7^QN9SpJ
      - JWTConfig__ExpirationInMinutes=5


  backend-two:
    <<: *backend
    ports: 
      - "9001:8080"

  frontend:
    build:
      context: ./FrontEnd
    depends_on:
      - loadbalancer
    ports:
      - "4000:80"
  
  loadbalancer:
    image: nginx:alpine
    ports:
      - "9999:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend-one
      - backend-two
volumes:
  postgres_data: